#!/bin/sh

sep="^c#3B4252^|^d^"
separator="^c#3B4252^│^d^"

update_backlight() {
    brightness="$(light | awk '{print int($1+0.5)}')"
   
    { [ "$brightness" -lt 10 ] && backlight="^c#434c5e^^d^ $brightness%"; } ||
    { [ "$brightness" -lt 25 ] && backlight="^c#e5e9f0^^d^ $brightness%"; } ||
    { [ "$brightness" -lt 50 ] && backlight="^c#ebcb8b^^d^ $brightness%"; } ||
    { [ "$brightness" -ge 75 ] && backlight="^c#a3be8c^^d^ $brightness%"; } ||
    { backlight="^c#a3be8c^^d^ $brightness%"; }    
}

update_battery() {
    # Glyphs battery_0 to battery_100 and battery_charging_0 to
    # battery_charging_100, in increments of 10.
    set -- '^b#bf616a^^d^' '^c#bf616a^^d^' '^c#434c5e^^d^' '^c#4c566a^^d^' \
	'^c#e5e9f0^^d^' '^c#ebcb8b^^d^' '^c#a3be8c^^d^' '^c#a3be8c^^d^' \
	'^c#a3be8c^^d^' '^c#a3be8c^^d^' '^b#a3be8c^^d^' \
	'^b#bf616a^ﴐ^d^' '^c#bf616a^ﴆ^d^' '^c#434c5e^ﴇ^d^' '^c#4c566a^ﴈ^d^' \
	'^c#e5e9f0^ﴉ^d^' '^c#ebcb8b^ﴊ^d^' '^c#a3be8c^ﴋ^d^' '^c#a3be8c^ﴌ^d^' \
	'^c#a3be8c^ﴍ^d^' '^c#a3be8c^ﴎ^d^' '^b#a3be8c^ﴅ^d^' '^b#d8dee9^^d^' \
	'^b#d8dee9^ﴏ^d^' 'ﮣ'

    [ "$(acpi | wc -l)" -eq 0 ] && battery=${25}
    batt_path=/sys/class/power_supply/BAT0
    time=$(acpi | cut -d' ' -f5 | sed 's/^[0:]*//')
    [ "$(echo "$time" | grep -v '^[[:space:]]*$' | wc -l)" -ne 0 ] && time2="$sep$time"
    zero=$(acpi | cut -d' ' -f7)

    read -r capacity <"$batt_path/capacity"
    read -r status <"$batt_path/status"

    total="$status $capacity"

    case $status in
	Charging) charging=1 ;;
    esac

	# Get the corresponding icon from the positional parameters
	# with an offset of 11 glyphs if the battery is charging.
	eval "batt_icon=\${$((capacity / 10 + 1 + (charging ? 11 : 0)))}"


	case $zero in
	    zero) icon=${24}
		battery="$batt_icon $capacity%"
	esac

	case $status in
	    Charging)
		battery="$batt_icon $capacity%$time2"
	esac

	case $status in
	    Discharging)
		battery="$batt_icon $capacity%$time2"
	esac

	case $status in
	    Full)
		battery="${11} $capacity%"
	esac

	case $status in
	    Unknown) icon=${23}
		battery="$batt_icon $capacity%"
	esac

	case $time in
	    until) icon=${24}
		battery="$batt_icon $capacity%"
	esac
}

update_cpu_icon() {
    scaling_governor="$(cpupower frequency-info | grep 'The governor "' | awk -F 'The governor "' {'print $2'} | cut -d '"' -f 1)"

    { [ "$scaling_governor" = powersave ] && cpu_icon="^c#4c566a^臘^d^"; } ||
    { [ "$scaling_governor" = conservative ] && cpu_icon="^c#ebcb8b^^d^"; } ||
    { [ "$scaling_governor" = performance ] && cpu_icon="^c#bf616a^^d^"; } ||
    { cpu_icon="^c#a3be8c^﬙"^d^; }
}

update_cpu_speed() {
    cpu_speed="$(cpupower frequency-info | grep "current CPU frequency: " | grep " (asserted by call to kernel)" | awk -F "current CPU frequency: " {'print $2'} | awk {'print $1" "$2'})"
}

update_cpu_percentage() {
    cpu_percentage="$(mpstat | awk '$12 ~ /[0-9.]+/ { print 100 - $12 }' | awk '{print int($1+0.5)}')%"
}

update_cpu_temperature() {
    cpu_temperature="$(sensors | awk '/temp1:/ {print $2}' | cut -d '+' -f2)"
}

update_cpu() {
    cpu="$cpu_icon $cpu_speed"
}

update_datetime() {
    datetime="^c#81A1C1^^d^ $(date +"%D^c#3B4252^|^d^%R:%S")"
}

update_disk() {
    disk_perc="$(df -h / | tail --lines=+2 | awk '{print $5}' | cut -d '%' -f1)"


    { [ "$disk_perc" -lt 10 ] && disk="^c#434c5e^^d^ $disk_perc%"; } ||
    { [ "$disk_perc" -lt 25 ] && disk="^c#e5e9f0^^d^ $disk_perc%"; } ||
    { [ "$disk_perc" -lt 50 ] && disk="^c#ebcb8b^^d^ $disk_perc%"; } ||
    { [ "$disk_perc" -ge 90 ] && disk="^c#bf616a^^d^ $disk_perc%"; } ||
    { disk="^c#a3be8c^^d^ $disk_perc%"; }
}

update_ffmpeg() {
    ffmpeg_check="$(pgrep ffmpeg | wc -l)"
    ffmpeg_check_id="$(pgrep ffmpeg)"

    { [ "$(ps axh | grep ffmpeg | grep x11grab | grep alsa | wc -l)" -ge 1 ] && ffmpeg_icon2="辶^c#3B4252^|^d^"; } ||
    { [ "$(ps axh | grep ffmpeg | grep x11grab | grep -v alsa | wc -l)" -ge 1 ] && ffmpeg_icon2="辶"; } ||
    { [ "$(ps axh | grep ffmpeg | grep alsa | grep -v x11grab | grep -v v4l2 | wc -l)" -ge 1 ] && ffmpeg_icon2=""; } ||
    { [ "$(ps axh | grep ffmpeg | grep v4l2 | grep alsa | wc -l)" -ge 1 ] && ffmpeg_icon2="犯^c#3B4252^|^d^"; } ||
    { [ "$(ps axh | grep ffmpeg | grep v4l2 | grep -v alsa | wc -l)" -ge 1 ] && ffmpeg_icon2="犯"; } ||
    { ffmpeg_icon2=""; }


    { [ "$ffmpeg_check" -ge 1 ] && ffmpeg_pause="$(grep State /proc/$ffmpeg_check_id/status | cut -d '(' -f2 | cut -d ')' -f1)"; }
    { [ "$ffmpeg_pause" = "stopped" ] && ffmpeg_icon3="^c#3B4252^|^d^^c#ebcb8b^^d^"; } ||
    { ffmpeg_icon3=""; }

    { [ "$ffmpeg_icon2" != "" ] && [ -f /tmp/ffmpeg-* ] && ffmpeg="$ffmpeg_icon2$ffmpeg_icon3 $(cat -A $(ls /tmp/ffmpeg-* | tail -1) | tr ' ' '\n' | grep time= | tail -1 | awk -F time= {'print $2'} | cut -d '.' -f 1 | sed 's/^[0:]*//')"; } ||
    { ffmpeg="$ffmpeg_icon2$ffmpeg_icon3"; }
}

update_volume_input() {
    input_volume="$(pactl get-source-volume 0 | awk '{print $5}' | cut -d '%' -f1 | grep -v '^[[:space:]]*$')"
    input_ismuted="$(pactl get-source-mute 0 | cut -d ' ' -f2)"
    
    { [ "$input_volume" = 0 ] && volume_input="^c#434c5e^^d^ $input_volume%"; } ||
    { [ "$input_ismuted" = yes ] && volume_input="^c#4c566a^^d^ $input_volume%"; } ||
    { [ "$input_volume" -lt 25 ] && volume_input="^c#e5e9f0^^d^ $input_volume%"; } ||
    { [ "$input_volume" -lt 50 ] && volume_input="^c#ebcb8b^^d^ $input_volume%"; } ||
    { [ "$input_volume" -gt 100 ] && volume_input="^c#bf616a^^d^ $input_volume%"; } ||
    { volume_input="^c#a3be8c^^d^ $input_volume%"; }
}

update_volume_output() {
    output_volume="$(pactl get-sink-volume 0 | awk '{print $5}' | cut -d '%' -f1 | grep -v '^[[:space:]]*$')"
    output_ismuted="$(pactl get-sink-mute 0 | cut -d ' ' -f2)"
    
    { [ "$output_ismuted" = yes ] && volume_output="^c#4c566a^ﱝ^d^ $output_volume%"; } ||
    { [ "$output_volume" = 0 ] && volume_output="^c#434c5e^婢^d^ $output_volume%"; } ||
    { [ "$output_volume" -lt 25 ] && volume_output="^c#e5e9f0^奄^d^ $output_volume%"; } ||
    { [ "$output_volume" -lt 50 ] && volume_output="^c#ebcb8b^奔^d^ $output_volume%"; } ||
    { [ "$output_volume" -gt 100 ] && volume_output="^c#bf616a^^d^ $output_volume%"; } ||
    { volume_output="^c#a3be8c^墳^d^ $output_volume%"; }
}

update_keymap() {
    keyboard_layout="$(xkb-switch)"
    keymap="^c#81A1C1^^d^ $keyboard_layout"
}

update_memory_amount() {
    memory_perc="$(free | grep Mem | awk '{print $3/$2 * 100}' | cut -d '.' -f1)"
    
    { [ "$memory_perc" -lt 10 ] && memory_amount="^c#434c5e^^d^ $memory_perc%"; } ||
    { [ "$memory_perc" -lt 25 ] && memory_amount="^c#e5e9f0^^d^ $memory_perc%"; } ||
    { [ "$memory_perc" -lt 50 ] && memory_amount="^c#ebcb8b^^d^ $memory_perc%"; } ||
    { [ "$memory_perc" -ge 90 ] && memory_amount="^c#bf616a^^d^ $memory_perc%"; } ||
    { memory_amount="^c#a3be8c^^d^ $memory_perc%"; }
}

while true; do
    update_backlight
    update_battery
    update_cpu_icon
    update_cpu_speed
    update_cpu
    update_datetime
    update_disk
    update_ffmpeg
    update_keymap
    update_memory_amount
    update_volume_output
    update_volume_input

    [ ! -z "$ffmpeg" ] && ffmpeg="$ffmpeg "
    xsetroot -name " $ffmpeg$volume_output $volume_input $backlight $keymap ^c#3B4252^│^d^ $cpu $memory_amount $disk $battery $separator $datetime"
    sleep 0.001
done
